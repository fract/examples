"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[109],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),i=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=i(r),d=n,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return r?a.createElement(f,s(s({ref:t},c),{},{components:r})):a.createElement(f,s({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,s[1]=p;for(var i=2;i<o;i++)s[i]=r[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},733:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:6},s="Comparers",p={unversionedId:"state-management/comparers",id:"state-management/comparers",title:"Comparers",description:"With comparators, you can abort the update propagation process if new and old data are equivalent",source:"@site/docs/state-management/comparers.md",sourceDirName:"state-management",slug:"/state-management/comparers",permalink:"/docs/state-management/comparers",draft:!1,editUrl:"https://github.com/whatsup/whatsup/docs/state-management/comparers.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Mutators",permalink:"/docs/state-management/mutators"},next:{title:"Filters",permalink:"/docs/state-management/filters"}},l={},i=[{value:"Shallow &amp; Deep",id:"shallow--deep",level:3},{value:"Custom comparator",id:"custom-comparator",level:3}],c={toc:i};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"comparers"},"Comparers"),(0,n.kt)("p",null,"With comparators, you can abort the update propagation process if new and old data are equivalent"),(0,n.kt)("h3",{id:"shallow--deep"},"Shallow & Deep"),(0,n.kt)("p",null,"Whatsup comparators are based on mutators and can be used more flexibly.\nIf we use ",(0,n.kt)("inlineCode",{parentName:"p"},"mobx")," we will do it like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"const users = observable.array<User>([])\nconst admins = computed(() => users.filter((u) => u.isAdmin), {\n    equals: comparer.shallow,\n})\n")),(0,n.kt)("p",null,"Here is ",(0,n.kt)("inlineCode",{parentName:"p"},"whatsup")," way:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import { shallow } from 'whatsup/equals'\n\nconst users = array<User>([])\nconst admins = computed(() => shallow(users.filter((u) => u.isAdmin)))\n")),(0,n.kt)("p",null,"Whatsup provides comparators as a separate library ",(0,n.kt)("inlineCode",{parentName:"p"},"@whatsup/equals")," (shorthand ",(0,n.kt)("inlineCode",{parentName:"p"},"whatsup/equals"),"), so far it includes only ",(0,n.kt)("inlineCode",{parentName:"p"},"shallow")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"deep"),", but in the future it will be replenished with the most popular ones"),(0,n.kt)("h3",{id:"custom-comparator"},"Custom comparator"),(0,n.kt)("p",null,"You can easily create your own comparator"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import { comparator } from 'whatsup'\n\nconst usersComparator = comparator<User>(\n    (next, prev) =>\n        Array.isArray(prev) &&\n        prev.lenght === next.length &&\n        prev.every((item, i) => item === next[i])\n)\nconst users = array<User>([])\nconst admins = computed(() => usersComparator(users.filter((u) => u.isAdmin)))\n")),(0,n.kt)("p",null,"To create a comparator, you only need a callback that takes a new and old value, compares and returns true or false"))}u.isMDXComponent=!0}}]);