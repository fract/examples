"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[164],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1419:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2},s="Computeds",c={unversionedId:"state-management/computeds",id:"state-management/computeds",title:"Computeds",description:"Creates a derived field. Accepts a function or generator as an argument.",source:"@site/docs/state-management/computeds.md",sourceDirName:"state-management",slug:"/state-management/computeds",permalink:"/docs/state-management/computeds",draft:!1,editUrl:"https://github.com/whatsup/whatsup/docs/state-management/computeds.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Observables",permalink:"/docs/state-management/observables"},next:{title:"Actions",permalink:"/docs/state-management/actions"}},i={},l=[{value:"Simple computed field",id:"simple-computed-field",level:3},{value:"Computed based on generator",id:"computed-based-on-generator",level:3}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"computeds"},"Computeds"),(0,o.kt)("p",null,"Creates a derived field. Accepts a function or generator as an argument."),(0,o.kt)("h3",{id:"simple-computed-field"},"Simple computed field"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { computed, autorun } from 'whatsup'\n\nconst firstName = observable('John')\nconst lastName = observale('Lennon')\n\nconst fullName = computed(() => `${firstName()} ${lastName()}`)\n\nautorun(() => console.log(fullName))\n//> 'John Lennon'\n\nfirstName('Barry')\n//> 'Barry Lennon'\n")),(0,o.kt)("h3",{id:"computed-based-on-generator"},"Computed based on generator"),(0,o.kt)("p",null,"The generator allows you to create a computed field with its own internal state and the ",(0,o.kt)("inlineCode",{parentName:"p"},"try catch finally")," construction allows you to handle errors and execute the code when there are no subscribers left."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { computed, autorun } from 'whatsup'\n\nconst timer = computed(function* () {\n    const counter = observable(0)\n    const timerId = setInterval(() => counter(counter() + 1), 1000)\n\n    try {\n        while (true) {\n            yield counter()\n        }\n    } finally {\n        clearInterval(timerId)\n        console.log('Timer stopped')\n    }\n})\n\nconst dispose = autorun(() => console.log(timer()))\n//> 0\n//> 1\n//> 2\n\ndispose()\n//> 'Timer stopped'\n")))}p.isMDXComponent=!0}}]);