"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[12],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,b=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(b,s(s({ref:t},i),{},{components:n})):r.createElement(b,s({ref:t},i))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,s[1]=p;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5537:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:4},s="Observable props",p={unversionedId:"components/observable-props",id:"components/observable-props",title:"Observable props",description:"You can pass observables and computeds directly to element properties. Whatsup will automatically extract their values and track changes. This functionality allows you to make updates without re-rendering components.",source:"@site/docs/components/observable-props.md",sourceDirName:"components",slug:"/components/observable-props",permalink:"/docs/components/observable-props",draft:!1,editUrl:"https://github.com/whatsup/whatsup/docs/components/observable-props.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Valid JSX elements",permalink:"/docs/components/valid-elements"},next:{title:"Context",permalink:"/docs/components/context/"}},l={},c=[],i=(u="App",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var u;const d={toc:c};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"observable-props"},"Observable props"),(0,o.kt)("p",null,"You can pass ",(0,o.kt)("inlineCode",{parentName:"p"},"observables")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"computeds")," directly to element properties. Whatsup will automatically extract their values and track changes. This functionality allows you to make updates without re-rendering components."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function App() {\n    const className = observable<'red' | 'green'>('red')\n    const handleClick = () => {\n        const newValue = className() === 'red' ? 'green' : 'red'\n        className(newValue)\n    }\n\n    while (true) {\n        yield(\n            <button className={className} onClick={handleClick}>\n                Click me\n            </button>\n        )\n    }\n}\n\nrender(<App />)\n")),(0,o.kt)("p",null,"When you click on the button, Whatsup will update the className property without re-rendering the ",(0,o.kt)(i,{mdxType:"App"})," component"))}m.isMDXComponent=!0}}]);